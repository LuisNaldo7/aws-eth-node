- name: Check Nethermind version
  block:
  - name: "Check for client version"
    command: "nethermind --version"
    register: "version_query"
    failed_when: false
    changed_when: false

  - name: "Extract Nethermind version"
    set_fact:
      nethermind_current_version: "{{ version_query.stdout | regex_search('(\\d+\\.\\d+\\.\\d+)') }}"

  - name: "Nethermind version installed"
    debug:
      var: nethermind_current_version
      
  - name: "Nethermind version wanted"
    debug:
      var: clients.nethermind.release_version

- name: "Check if Nethermind service is running"
  systemd_service:
    name: "{{ service.servicename_execution_client }}"
  register: "service_status"
  failed_when: false

- name: "Stop Nethermind service if running and new version wanted"
  when: "service_status.status is defined and service_status.status.ActiveState == \"active\" and nethermind_current_version not in clients.nethermind.release_version"
  systemd_service:
    name: "{{ service.servicename_execution_client }}"
    state: "stopped"
  become: true

- name: Install Nethermind
  when: "nethermind_current_version == \"\" or nethermind_current_version not in clients.nethermind.release_version"
  block:
  - name: Download Nethermind archive
    get_url:
      url: https://github.com/NethermindEth/nethermind/releases/download/{{ clients.nethermind.release_version }}/nethermind-{{ clients.nethermind.release_version }}-{{ clients.nethermind.commit_hash }}-linux-x64.zip
      dest: /tmp/nethermind.zip 
      mode: 0644
    become: true

  - name: Delete existing Nethermind client files
    file:
      state: absent
      path: /usr/local/nethermind

  - name: "Create Nethermind directory directory"
    file:
      path: "/usr/local/nethermind"
      state: "directory"
      mode: "0755"
    become: true

  - name: Extract Nethermind binary
    unarchive:
      src: /tmp/nethermind.zip
      dest: /usr/local/nethermind
      remote_src: true
    become: true

  - name: Create symbolic link 
    file:
      src: "/usr/local/nethermind/nethermind"
      dest: "{{ clients.nethermind.binary_path }}"
      mode: 0755
      state: link

  - name: "Clean up /tmp directory"
    file:
      path: "/tmp/{{ item }}"
      state: "absent"
    loop:
      - "nethermind.zip"
    become: true

- name: Setup Nethermind service
  when: "nethermind_current_version == \"\" or nethermind_current_version not in clients.nethermind.release_version"
  block:
    - name: Create service file
      template:
        src: nethermind.service.j2
        dest: /etc/systemd/system/{{ service.servicename_execution_client }}.service
        mode: '0644'

    - name: Reload systemd to recognize the new service
      systemd:
        name: "{{ service.servicename_execution_client }}"
        daemon_reload: true
      become: true

    - name: Enable the service to start on boot
      systemd:
        name: "{{ service.servicename_execution_client }}"
        enabled: yes

    - name: "Start service"
      systemd_service:
        name: "{{ service.servicename_execution_client }}"
        state: "started"
      become: true
     

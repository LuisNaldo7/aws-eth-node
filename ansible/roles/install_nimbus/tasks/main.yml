- name: Check Nimbus version
  block:
  - name: "Check for client version"
    command: "nimbus --version"
    register: "version_query"
    failed_when: false
    changed_when: false

  - name: "Extract Nimbus version"
    set_fact:
      nimbus_current_version: "{{ version_query.stdout | regex_search('(\\d+\\.\\d+\\.\\d+)') }}"

  - name: "Nimbus version installed"
    debug:
      var: nimbus_current_version
      
  - name: "Nimbus version wanted"
    debug:
      var: clients.nimbus.release_version

- name: "Check if Nimbus service is running"
  systemd_service:
    name: "{{ service.servicename_beacon_client }}"
  register: "service_status"
  failed_when: false

- name: "Stop Nimbus service if running and new version wanted"
  when: "service_status.status is defined and service_status.status.ActiveState == \"active\" and nimbus_current_version not in clients.nimbus.release_version"
  systemd_service:
    name: "{{ service.servicename_beacon_client }}"
    state: "stopped"
  become: true

- name: Install Nimbus
  when: "nimbus_current_version == \"\" or nimbus_current_version not in clients.nimbus.release_version"
  block:
  - name: Download Nimbus archive
    get_url:
      url: https://github.com/status-im/nimbus-eth2/releases/download/v{{ clients.nimbus.release_version }}/nimbus-eth2_Linux_amd64_{{ clients.nimbus.release_version }}_{{ clients.nimbus.commit_hash }}.tar.gz
      dest: /tmp/nimbus.tar.gz
      mode: 0644
    become: true

  - name: Extract Nimbus binary
    unarchive:
      src: /tmp/nimbus.tar.gz
      dest: /tmp/
      remote_src: true
      list_files: yes
    register: nimbus_archive
    become: true

  - name: Show the list of files found
    debug:
      var: nimbus_archive.files

  - name: Copy Nimbus binary
    copy:
      src: /tmp/{{ nimbus_archive.files[0] }}build/nimbus_beacon_node
      dest: /usr/local/bin/nimbus
      remote_src: true
      mode: 0755
    become: true

  - name: "Clean up /tmp directory"
    file:
      path: "/tmp/{{ item }}"
      state: "absent"
    loop:
      - "nimbus.tar.gz"
      - "{{ nimbus_archive.files[0] }}"
    become: true

- name: Setup Nimbus service
  when: "nimbus_current_version == \"\" or nimbus_current_version not in clients.nimbus.release_version"
  block:
    - name: Create service file
      template:
        src: nimbus_beacon.service.j2
        dest: /etc/systemd/system/{{ service.servicename_beacon_client }}.service
        mode: '0644'

    - name: Reload systemd to recognize the new service
      systemd:
        name: "{{ service.servicename_beacon_client }}"
        daemon_reload: true
      become: true

    - name: Enable the service to start on boot
      systemd:
        name: "{{ service.servicename_beacon_client }}"
        enabled: yes

    - name: Start service
      systemd_service:
        name: "{{ service.servicename_beacon_client }}"
        state: started
      become: true